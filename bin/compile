#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>
BP=$(dirname $(dirname $0))
source $BP/bin/functions.sh

if [[ -z "${1:-}" ]]; then
  err "Missing argument <build-dir>"
fi
BUILDDIR=$(cd "${1:-}/" && pwd)

if [[ -z "${2:-}" ]]; then
  err "Missing argument <cache-dir>"
fi
CACHEDIR=$(cd "${2:-}" && pwd)

if [[ ! -f "${BUILDDIR}/Logstash" ]]; then
  err "${BUILDDIR}/Logstash not found."
fi

# Source ubuntu distribution information
if [[ -f "/etc/lsb-release" ]]; then
  source /etc/lsb-release
fi

source ${BUILDDIR}/Logstash

# Default Values
# Logstash
LOGSTASH_CMD_ARGS=${LOGSTASH_CMD_ARGS:-""}
LOGSTASH_PLUGINS=${LOGSTASH_PLUGINS:-""}
LOGSTASH_CONFIG_CHECK=${LOGSTASH_CONFIG_CHECK:-1}
# List available releases: https://www.elastic.co/downloads/past-releases
LOGSTASH_VERSION=${LOGSTASH_VERSION:-$(cat ${BP}/VERSION)}
LOGSTASH_FILE=${LOGSTASH_FILE:-"logstash-${LOGSTASH_VERSION}.tar.gz"}
LOGSTASH_URL=${LOGSTASH_URL:-"https://artifacts.elastic.co/downloads/logstash/${LOGSTASH_FILE}"}
SHA1_EXT=${SHA1_EXT:-".sha1"}
OPENJDK_VERSION=${OPENJDK_VERSION:-"1.8.0_131"}
# List available releases: https://java-buildpack.cloudfoundry.org/openjdk-jdk/trusty/x86_64/index.yml
OPENJDK_URL=${OPENJDK_URL:-"https://java-buildpack.cloudfoundry.org/openjdk-jdk/${DISTRIB_CODENAME:-trusty}/x86_64/openjdk-${OPENJDK_VERSION}.tar.gz"}

# Curator
CURATOR_ENABLED=${CURATOR_ENABLED:-0}
CURATOR_SCHEDULE=${CURATOR_SCHEDULE:-"@daily"}
CURATOR_COMPILE=${CURATOR_COMPILE:-0}
# Download link for curator 5.0.4 with python 3.6.1, valid ~ 10 years from 29.05.2017
CURATOR_PRECOMPILED="https://ds31s3.swisscom.com/logstash-buildpack/curator-5.0.4-python-3.6.1.tar.gz?AWSAccessKeyId=5484335407854a4c9dc88e01206fc148%2FCF_P8_2CB0C541_6550_4D1E_B84F_70D7C543FB29&Expires=1811424743&Signature=ouoSXsihs10xAJVYJs9RI1Ioi6E%3D"

# List available releases: https://www.python.org/ftp/python/
PYTHON3_VERSION=${PYTHON3_VERSION:-"3.6.1"}
PYTHON3_URL=${PYTHON3_URL:-"https://www.python.org/ftp/python/${PYTHON3_VERSION}/Python-${PYTHON3_VERSION}.tgz"}
# List available releases: https://github.com/certifi/python-certifi/releases
CERTIFI_URL="https://github.com/certifi/python-certifi/archive/2017.04.17.tar.gz"
CERTIFI_TARGET="certifi-2017.04.17.tar.gz"
# List available releases: https://github.com/pallets/click/releases
CLICK_URL="https://github.com/pallets/click/archive/6.7.tar.gz"
CLICK_TARGET="click-6.7.tar.gz"
# List available releases: https://github.com/elastic/curator/releases
ELASTICSEARCH_CURATOR_URL="https://github.com/elastic/curator/archive/v5.0.4.tar.gz"
ELASTICSEARCH_CURATOR_TARGET="elasticsearch-curator-5.0.4.tar.gz"
# List available releases: https://github.com/elastic/elasticsearch-py/releases
ELASTICSEARCH_URL="https://github.com/elastic/elasticsearch-py/archive/5.4.0.tar.gz"
ELASTICSEARCH_TARGET="elasticsearch-5.4.0.tar.gz"
# List available releases: http://pyyaml.org/download/pyyaml/
PYYAML_URL="http://pyyaml.org/download/pyyaml/PyYAML-3.12.tar.gz"
PYYAML_TARGET="PyYAML-3.12.tar.gz"
# List available releases: https://github.com/shazow/urllib3/releases
URLLIB3_URL="https://github.com/shazow/urllib3/archive/1.21.1.tar.gz"
URLLIB3_TARGET="urllib3-1.21.1.tar.gz"
# List available releases: https://github.com/alecthomas/voluptuous/releases
VOLUPTUOUS_URL="https://github.com/alecthomas/voluptuous/archive/0.9.3.tar.gz"
VOLUPTUOUS_TARGET="voluptuous-0.9.3.tar.gz"

# Helper tools
# List available releases: https://github.com/jwilder/dockerize/releases/
DOCKERIZE_VERSION=${DOCKERIZE_VERSION:-"v0.4.0"}
DOCKERIZE_URL=${DOCKERIZE_URL:-"https://github.com/jwilder/dockerize/releases/download/${DOCKERIZE_VERSION}/dockerize-linux-amd64-${DOCKERIZE_VERSION}.tar.gz"}
# List available releases: https://github.com/stedolan/jq/releases/
JQ_URL=${JQ_URL:-"https://github.com/stedolan/jq/releases/download/jq-1.5/jq-linux64"}
# List available releases: https://github.com/mcuadros/ofelia/releases/
OFELIA_VERSION="v0.2.2"
OFELIA_URL="https://github.com/mcuadros/ofelia/releases/download/${OFELIA_VERSION}/ofelia_${OFELIA_VERSION}_linux_amd64.tar.gz"
# " Correct syntax highlighting

mkdir -p ${BUILDDIR}/bin

# Install dockerize
if [[ ! -f ${BUILDDIR}/bin/dockerize ]]; then
  start "Installing dockerize"
  cd ${BUILDDIR}/bin
  ${CURL} ${DOCKERIZE_URL} | tar xzf -
  finished
  step "Downloaded ${DOCKERIZE_URL}"
fi

# Install jq
if [[ ! -f ${BUILDDIR}/bin/jq ]]; then
  start "Installing jq"
  ${CURL} -o ${BUILDDIR}/bin/jq ${JQ_URL}
  chmod +x ${BUILDDIR}/bin/jq
  finished
  step "Downloaded ${JQ_URL}"
fi

# Install OpenJDK
if [[ ! -d ${BUILDDIR}/openjdk ]]; then
  start "Installing openjdk"
  mkdir -p ${BUILDDIR}/openjdk
  cd ${BUILDDIR}/openjdk
  ${CURL} ${OPENJDK_URL} | tar zxf -
  finished
  step "Downloaded ${OPENJDK_URL}"
fi

# Install Logstash
if [[ ! -d ${BUILDDIR}/logstash-${LOGSTASH_VERSION} ]]; then
  start "Installing Logstash ${LOGSTASH_VERSION}"
  ${CURL} -o "${CACHEDIR}/${LOGSTASH_FILE}" "${LOGSTASH_URL}"

  ${CURL} -o "${CACHEDIR}/${LOGSTASH_FILE}${SHA1_EXT}" "${LOGSTASH_URL}${SHA1_EXT}"
  cd ${CACHEDIR}
  test "$(sha1sum ${CACHEDIR}/${LOGSTASH_FILE} | awk ' { print $1 } ')" = "$(cat ${CACHEDIR}/${LOGSTASH_FILE}${SHA1_EXT})"

  tar -zx -C ${BUILDDIR} -f ${CACHEDIR}/${LOGSTASH_FILE}
  finished
  step "Downloaded ${LOGSTASH_URL}"
fi

export JAVA_HOME="${BUILDDIR}/openjdk"
export LS_HEAP_SIZE="${LS_HEAP_SIZE:-$(echo ${VCAP_APPLICATION} | ${BUILDDIR}/bin/jq '.limits.mem * .9 | floor')m}"


step "Create buildpack-release-step.yml"
mkdir -p ${BUILDDIR}/logstash.conf.d
cat << EOF >> ${BUILDDIR}/buildpack-release-step.yml
---
default_process_types:
  web: bin/dockerize -template conf.d:logstash.conf.d /bin/bash -c bin/run.sh
EOF

# Start Logstash
export JAVA_HOME=\${HOME}/openjdk
export LS_HEAP_SIZE=${LS_HEAP_SIZE}
\${HOME}/logstash-${LOGSTASH_VERSION}/bin/logstash -f logstash.conf.d ${LOGSTASH_CMD_ARGS}
EOF

chmod +x ${BUILDDIR}/bin/*.sh

step "Buildpack compile finished"
